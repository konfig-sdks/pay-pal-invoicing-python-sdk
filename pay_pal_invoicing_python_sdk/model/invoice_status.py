# coding: utf-8

"""
    Invoices

    Use the Invoicing API to create, send, and manage invoices. You can also use the API or webhooks to track invoice payments. When you send an invoice to a customer, the invoice moves from draft to payable state. PayPal then emails the customer a link to the invoice on the PayPal website. Customers with a PayPal account can log in and pay the invoice with PayPal. Alternatively, customers can pay as a guest with a debit card or credit card. For more information, see the <a href=\"/docs/invoicing/\">Invoicing Overview</a> and the <a href=\"/docs/invoicing/basic-integration/\">Invoicing Integration Guide</a>.

    The version of the OpenAPI document: 2.3
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from pay_pal_invoicing_python_sdk import schemas  # noqa: F401


class InvoiceStatus(
    schemas.EnumBase,
    schemas.StrSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    The status of the invoice.
    """


    class MetaOapg:
        enum_value_to_name = {
            "DRAFT": "DRAFT",
            "SENT": "SENT",
            "SCHEDULED": "SCHEDULED",
            "PAID": "PAID",
            "MARKED_AS_PAID": "MARKED_AS_PAID",
            "CANCELLED": "CANCELLED",
            "REFUNDED": "REFUNDED",
            "PARTIALLY_PAID": "PARTIALLY_PAID",
            "PARTIALLY_REFUNDED": "PARTIALLY_REFUNDED",
            "MARKED_AS_REFUNDED": "MARKED_AS_REFUNDED",
            "UNPAID": "UNPAID",
            "PAYMENT_PENDING": "PAYMENT_PENDING",
        }
    
    @schemas.classproperty
    def DRAFT(cls):
        return cls("DRAFT")
    
    @schemas.classproperty
    def SENT(cls):
        return cls("SENT")
    
    @schemas.classproperty
    def SCHEDULED(cls):
        return cls("SCHEDULED")
    
    @schemas.classproperty
    def PAID(cls):
        return cls("PAID")
    
    @schemas.classproperty
    def MARKED_AS_PAID(cls):
        return cls("MARKED_AS_PAID")
    
    @schemas.classproperty
    def CANCELLED(cls):
        return cls("CANCELLED")
    
    @schemas.classproperty
    def REFUNDED(cls):
        return cls("REFUNDED")
    
    @schemas.classproperty
    def PARTIALLY_PAID(cls):
        return cls("PARTIALLY_PAID")
    
    @schemas.classproperty
    def PARTIALLY_REFUNDED(cls):
        return cls("PARTIALLY_REFUNDED")
    
    @schemas.classproperty
    def MARKED_AS_REFUNDED(cls):
        return cls("MARKED_AS_REFUNDED")
    
    @schemas.classproperty
    def UNPAID(cls):
        return cls("UNPAID")
    
    @schemas.classproperty
    def PAYMENT_PENDING(cls):
        return cls("PAYMENT_PENDING")
