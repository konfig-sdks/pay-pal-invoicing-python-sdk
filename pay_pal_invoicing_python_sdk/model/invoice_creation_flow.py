# coding: utf-8

"""
    Invoices

    Use the Invoicing API to create, send, and manage invoices. You can also use the API or webhooks to track invoice payments. When you send an invoice to a customer, the invoice moves from draft to payable state. PayPal then emails the customer a link to the invoice on the PayPal website. Customers with a PayPal account can log in and pay the invoice with PayPal. Alternatively, customers can pay as a guest with a debit card or credit card. For more information, see the <a href=\"/docs/invoicing/\">Invoicing Overview</a> and the <a href=\"/docs/invoicing/basic-integration/\">Invoicing Integration Guide</a>.

    The version of the OpenAPI document: 2.3
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from pay_pal_invoicing_python_sdk import schemas  # noqa: F401


class InvoiceCreationFlow(
    schemas.EnumBase,
    schemas.StrSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    The frequency at which the invoice is sent:<ul><li>Multiple recipient. Sent to multiple recipients.</li><li>Batch. Sent in a batch.</li><li>Regular single. Sent one time to a single recipient.</li></ul>
    """


    class MetaOapg:
        enum_value_to_name = {
            "MULTIPLE_RECIPIENTS_GROUP": "MULTIPLE_RECIPIENTS_GROUP",
            "BATCH": "BATCH",
            "REGULAR_SINGLE": "REGULAR_SINGLE",
        }
    
    @schemas.classproperty
    def MULTIPLE_RECIPIENTS_GROUP(cls):
        return cls("MULTIPLE_RECIPIENTS_GROUP")
    
    @schemas.classproperty
    def BATCH(cls):
        return cls("BATCH")
    
    @schemas.classproperty
    def REGULAR_SINGLE(cls):
        return cls("REGULAR_SINGLE")
