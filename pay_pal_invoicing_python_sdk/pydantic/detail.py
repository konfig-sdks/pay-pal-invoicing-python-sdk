# coding: utf-8

"""
    Invoices

    Use the Invoicing API to create, send, and manage invoices. You can also use the API or webhooks to track invoice payments. When you send an invoice to a customer, the invoice moves from draft to payable state. PayPal then emails the customer a link to the invoice on the PayPal website. Customers with a PayPal account can log in and pay the invoice with PayPal. Alternatively, customers can pay as a guest with a debit card or credit card. For more information, see the <a href=\"/docs/invoicing/\">Invoicing Overview</a> and the <a href=\"/docs/invoicing/basic-integration/\">Invoicing Integration Guide</a>.

    The version of the OpenAPI document: 2.3
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from pay_pal_invoicing_python_sdk.pydantic.currency_code import CurrencyCode
from pay_pal_invoicing_python_sdk.pydantic.file_reference import FileReference

class Detail(BaseModel):
    currency_code: CurrencyCode = Field(alias='currency_code')

    # The reference data. Includes a post office (PO) number.
    reference: typing.Optional[str] = Field(None, alias='reference')

    # A note to the invoice recipient. Also appears on the invoice notification email.
    note: typing.Optional[str] = Field(None, alias='note')

    # The general terms of the invoice. Can include return or cancellation policy and other terms and conditions.
    terms_and_conditions: typing.Optional[str] = Field(None, alias='terms_and_conditions')

    # A private bookkeeping memo for the user.
    memo: typing.Optional[str] = Field(None, alias='memo')

    # An array of PayPal IDs for the files that are attached to an invoice.
    attachments: typing.Optional[typing.List[FileReference]] = Field(None, alias='attachments')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
